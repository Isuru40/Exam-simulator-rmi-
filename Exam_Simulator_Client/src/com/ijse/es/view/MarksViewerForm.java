/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ijse.es.view;

import com.ijse.es.connector.ServerConnector;
import com.ijse.es.controller.ExamController;
import com.ijse.es.controller.QuestionController;
import com.ijse.es.dto.ExamDTO;
import com.ijse.es.dto.QuestionDTO;
import java.io.IOException;
import java.rmi.NotBoundException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *-+
 * @author User
 */
public class MarksViewerForm extends javax.swing.JFrame {

    /**
     * Creates new form MarksViewerForm
     */
    public MarksViewerForm() {
        try {
            initComponents();
            getRandoms();
            ExamController controller=ServerConnector.getServerConnector().getExamController();
            ExamDTO dTO=controller.searchExam("E001");
           // new ExamPaperForm(dTO).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(MarksViewerForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MarksViewerForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(MarksViewerForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(MarksViewerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textArea1 = new java.awt.TextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(textArea1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 370));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarksViewerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarksViewerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarksViewerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarksViewerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MarksViewerForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.TextArea textArea1;
    // End of variables declaration//GEN-END:variables
    private void getRandoms() {
        try {
           QuestionController controller = ServerConnector.getServerConnector().getQuestionController();
            HashMap<Integer, QuestionDTO> hlist = controller.getRandomQuestion("OOP");
            Object[] crunchifyKeys = hlist.keySet().toArray();
            Object key = crunchifyKeys[new Random().nextInt(crunchifyKeys.length)];
            java.util.List<Map.Entry<Integer, QuestionDTO>> list = new ArrayList<Map.Entry<Integer, QuestionDTO>>(hlist.entrySet());
            Collections.shuffle(list);
            for (Map.Entry<Integer, QuestionDTO> entry : list) {
                textArea1.append(entry.getValue().getQid()+"  "+entry.getValue().getQuestion()+"\n");
            }
        } catch (IOException | ClassNotFoundException | ParseException | NotBoundException ex) {
            Logger.getLogger(MarksViewerForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
