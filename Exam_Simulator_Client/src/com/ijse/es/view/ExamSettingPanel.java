/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ijse.es.view;

import com.ijse.es.connector.ServerConnector;
import com.ijse.es.controller.ExamController;
import com.ijse.es.dto.ExamDTO;
import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class ExamSettingPanel extends javax.swing.JPanel {

    /**
     * Creates new form ExamSettingPanel
     */
    public ExamSettingPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        pnlExamSetting = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtExamID = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtSubject = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txtTime = new javax.swing.JTextField();
        txtExamTitle = new javax.swing.JTextField();
        jCalendarCombo1 = new org.freixas.jcalendar.JCalendarCombo();
        jLabel1 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jlbl = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        spEasy = new javax.swing.JSpinner();
        spHard = new javax.swing.JSpinner();
        spMedium = new javax.swing.JSpinner();
        jLabel23 = new javax.swing.JLabel();
        btnPri = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jTextField1 = new javax.swing.JTextField();
        lblBatch = new javax.swing.JLabel();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(840, 481));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlExamSetting.setBackground(new java.awt.Color(153, 153, 153));
        pnlExamSetting.setOpaque(false);
        pnlExamSetting.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel17.setText("exam title");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 192, -1));

        jLabel15.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        jLabel15.setText("exam settings");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 144, 60));

        jLabel18.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel18.setText("date");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 120, 40));

        jLabel16.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel16.setText("exam id");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 132, -1));

        txtExamID.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtExamID.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtExamID.setSelectionColor(new java.awt.Color(0, 0, 0));
        txtExamID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtExamIDActionPerformed(evt);
            }
        });
        jPanel1.add(txtExamID, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 250, 40));

        jLabel19.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel19.setText("subject");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 70, 32));

        txtSubject.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtSubject.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtSubject.setSelectionColor(new java.awt.Color(0, 0, 0));
        jPanel1.add(txtSubject, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 250, 40));

        jLabel20.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel20.setText("organize audiance");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, 210, 40));

        jLabel28.setBackground(new java.awt.Color(102, 102, 102));
        jLabel28.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        jLabel28.setText("     update");
        jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel28.setOpaque(true);
        jLabel28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel28MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 350, 180, 50));

        jLabel27.setBackground(new java.awt.Color(102, 102, 102));
        jLabel27.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        jLabel27.setText("     delete");
        jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel27.setOpaque(true);
        jLabel27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel27MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 350, 180, 50));

        txtTime.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtTime.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtTime.setSelectionColor(new java.awt.Color(0, 0, 0));
        jPanel1.add(txtTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 90, 40));

        txtExamTitle.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        txtExamTitle.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtExamTitle.setSelectionColor(new java.awt.Color(0, 0, 0));
        jPanel1.add(txtExamTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 250, 40));
        jPanel1.add(jCalendarCombo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, 250, 40));

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel1.setText("minutes");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, 120, 40));

        jLabel24.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel24.setText("medium");
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 290, 80, 50));

        jLabel22.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel22.setText("hard");
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, 37, 50));

        jlbl.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jlbl.setText("easy");
        jPanel1.add(jlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 290, 60, 50));

        jLabel21.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel21.setText("time");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 170, 40));
        jPanel1.add(spEasy, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 300, 40, 30));
        jPanel1.add(spHard, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, 40, 30));
        jPanel1.add(spMedium, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 300, 40, 30));

        jLabel23.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel23.setText("organize paper");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 170, 40));

        buttonGroup1.add(btnPri);
        btnPri.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        btnPri.setText("private");
        jPanel1.add(btnPri, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 90, 160, 30));

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jRadioButton2.setText("public");
        jPanel1.add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 90, 120, 30));
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 140, 170, 40));

        lblBatch.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        lblBatch.setText("batch");
        jPanel1.add(lblBatch, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 140, 80, 40));

        pnlExamSetting.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        add(pnlExamSetting, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 480));
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseClicked
        deleteExam();
    }//GEN-LAST:event_jLabel27MouseClicked

    private void txtExamIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtExamIDActionPerformed
        searchExam();
    }//GEN-LAST:event_txtExamIDActionPerformed

    private void jLabel28MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel28MouseClicked
        updateExam();
    }//GEN-LAST:event_jLabel28MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton btnPri;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private org.freixas.jcalendar.JCalendarCombo jCalendarCombo1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel jlbl;
    private javax.swing.JLabel lblBatch;
    private javax.swing.JPanel pnlExamSetting;
    private javax.swing.JSpinner spEasy;
    private javax.swing.JSpinner spHard;
    private javax.swing.JSpinner spMedium;
    private javax.swing.JTextField txtExamID;
    private javax.swing.JTextField txtExamTitle;
    private javax.swing.JTextField txtSubject;
    private javax.swing.JTextField txtTime;
    // End of variables declaration//GEN-END:variables

    private void searchExam() {
        //load exit exam details
        try {
            String eID = txtExamID.getText();
            ExamController controller = ServerConnector.getServerConnector().getExamController();
            ExamDTO exam = controller.searchExam(eID);
            if (exam != null) {
                boolean isReserved = controller.reserveExam(eID);
                if (isReserved) {
                    txtExamTitle.setText(exam.getExamTitle());
                    txtSubject.setText(exam.getSubject());
                    // jCalendarCombo1.set(exam.getDate());
                    txtTime.setText(exam.getTime());
                    if (!exam.getBatch().equals("ALL")) {
                        btnPri.setSelected(true);
                        lblBatch.setVisible(true);
                        jTextField1.setVisible(true);
                    } else {
                        jRadioButton2.setSelected(true);
                    }
                    if (btnPri.isSelected()) {
                        jTextField1.setText(exam.getBatch());
                    }
                } else {
                    JOptionPane.showMessageDialog(this, eID + " is already reserved");
                }
            } else {
                JOptionPane.showMessageDialog(this, "No Exam found");
            }

            System.out.println(exam.getLecturerDTO().getName());
        } catch (NotBoundException | ClassNotFoundException | ParseException ex) {
            Logger.getLogger(ExamSettingPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(ExamSettingPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ExamSettingPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ExamSettingPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void deleteExam() {
        try {
            ExamController controller = ServerConnector.getServerConnector().getExamController();
            boolean delete = false;
            int i = JOptionPane.showConfirmDialog(this, "are you sure you want to delete" + txtExamTitle.getText());
            if (i == 0) {
                delete = controller.deleteExam(txtExamID.getText());
            }
            if (delete) {
            } else {
                JOptionPane.showMessageDialog(this, "deleted");
            }
        } catch (NotBoundException ex) {
            Logger.getLogger(ExamSettingPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(ExamSettingPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(ExamSettingPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ExamSettingPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ExamSettingPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(ExamSettingPanel.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                ExamController controller = ServerConnector.getServerConnector().getExamController();
                controller.releaseExam(txtExamID.getText());
            } catch (RemoteException ex) {
                Logger.getLogger(ExamSettingPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NotBoundException ex) {
                Logger.getLogger(ExamSettingPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (MalformedURLException ex) {
                Logger.getLogger(ExamSettingPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void updateExam() {
        try {
            ExamController controller = ServerConnector.getServerConnector().getExamController();
            String examID = txtExamID.getText();
            String examTitle = txtExamTitle.getText();
            String subject = txtSubject.getText();
            String time = txtTime.getText();
            int hard = (int) spHard.getValue();
            int medium = (int) spMedium.getValue();
            int easy = (int) spHard.getValue();
            ExamDTO exam = controller.searchExam(examID);
            String cal = (String) jCalendarCombo1.getSelectedItem();
            String batch = "ALL";
            if (btnPri.isSelected()) {
                batch = jTextField1.getText();
            } else {
                batch = "ALL";
            }
            ExamDTO examDTO = new ExamDTO(examID, exam.getLecturerDTO(), examTitle, subject, cal, time, hard, medium, easy, batch);
        } catch (IOException ex) {
            Logger.getLogger(ExamSettingPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ExamSettingPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(ExamSettingPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(ExamSettingPanel.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                ExamController controller = ServerConnector.getServerConnector().getExamController();
                controller.releaseExam(txtExamID.getText());
            } catch (RemoteException | NotBoundException | MalformedURLException ex) {
                Logger.getLogger(ExamSettingPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }
}
